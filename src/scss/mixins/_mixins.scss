@function text-color($color) {
    @if (lightness($color) > 70%) {
        @return darken($color , 30%);
    } @else {
        @return lighten($color , 80%);
    }
}

@function rem($pixels, $context: 16) {
    @return ($pixels / $context) * 1rem;
}


@mixin flex-variant($display, $direction: false, $align: false, $justify: false, $wrap: false, $flow: false) {
    display: $display;

    @if $direction {
        flex-direction: $direction;
    }

    @if $align {
        align-items: $align;
    }

    @if $justify {
        justify-content: $justify;
    }

    @if $wrap {
        flex-wrap: $wrap;
    }

    @if $flow {
        flex-flow: $flow;
    }
}

@mixin flex($direction: false, $align: false, $justify: false, $wrap: false, $flow: false) {
    @include flex-variant(flex, $direction: $direction, $align: $align, $justify: $justify, $wrap: $wrap, $flow: $flow);
}

@mixin inline-flex($direction: false, $align: false, $justify: false, $wrap: false, $flow: false) {
    @include flex-variant(inline-flex, $direction: $direction, $align: $align, $justify: $justify, $wrap: $wrap, $flow: $flow);
}



// To use this function, use @incloud to call
// Example @include flex($direction: row, $align: center)


// Media Query
@mixin for-phone {
    @media screen and (min-width: $large-phone) {
        @content;
    }
}

@mixin for-tablet {
    @media screen and (min-width: $tablet) {
        @content;
    }
}

@mixin for-desktop {
    @media screen and (min-width: $desktop) {
        @content;
    }
}


@mixin elColors($color) {
    background-color: $color;
    color: text-color($color);
}


//  ** Prefix CSS3 Properties
//  ** Accept Arguments => Property Name, Property Values, Vendor Prefixes
//  ** Example: @include prefixer(transition, all .3s ease, webkit moz o)


@mixin prefixer($property, $value, $prefixes: ()) {
    @each $prefix in $prefixes {
        #{'-' + $prefix + '-' + $property}: $value;
    }
    #{$property}: $value;
}


//  ** Opacity Mixin For All Browsers
//  ** Accept Argument => Property Value
//  ** Example: @include opacity(.5)


@mixin opacity($value) {
    zoom: 1;
    $opacity-ie: $value * 100;
    filter: alpha(opacity=$opacity-ie);
    opacity: $value;
}


//  ** Animation Mixin For All Browser
//  ** Accept Argument => Animation Name
//  ** Example: @include keyframes(SlideUpAndDown)


@mixin keyframes($name) {
    @-webkit-keyframes #{$name} {
        @content;
    }
    @-moz-keyframes #{$name} {
        @content;
    }
    @keyframes #{$name} {
        @content;
    }
}


//  ** Overlay Mixin
//  ** Accept Argument => Color
//  ** Example: @include overlay(black, .5);


@mixin overlay($color, $opacity) {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba($color, $opacity);
}


//  ** Center Element Horizontally and Vertically
//  ** Accept No Arguments
//  ** Example: @include centerer();


@mixin centerer() {
    position: absolute;
    top: 50%;
    left: 50%;
    @include prefixer(transform, translate(-50%, -50%), webkit moz o);
}


// ** Circle Mixin
// ** Accept Argument => Dimensions
// ** Example: @include circle(100px);


@mixin circle($dimension) {
    width: $dimension;
    height: $dimension;
    border-radius: 50%;
}


//  ** Placeholder Mixin
//  ** Accept No Arguments
//  ** Example: @include placeholder( Add Properties Here );


@mixin placeholder() {
    ::-webkit-input-placeholder {
        @content;
    }

    ::-moz-placeholder {
        @content;
    }

    :-ms-input-placeholder {
        @content;
    }

    :-moz-placeholder {
        @content;
    }
}


//  ** Background Cover Mixin
//  ** Accept No Arguments
//  ** Example: @include cover();


@mixin cover() {
    @include prefixer(background-size, cover, webkit moz o);
    background-position: center center;
    background-repeat: no-repeat;
}
